Index: app/src/main/java/com/example/myapplication/DataAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication;\r\n\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.SQLException;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\nimport android.os.Build;\r\nimport android.util.Log;\r\n\r\nimport java.io.IOException;\r\nimport java.time.LocalDateTime;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class DataAdapter {\r\n    protected static final String TAG = \"DataAdapter\";\r\n\r\n    // TODO : TABLE 이름을 명시해야함\r\n    protected static final String TABLE_NAME = \"GAS\";\r\n\r\n    private final Context mContext;\r\n\r\n    private SQLiteDatabase mDb;\r\n    private DataBaseHelper mDbHelper;\r\n\r\n    public DataAdapter(Context context)\r\n    {\r\n        this.mContext = context;\r\n        mDbHelper = new DataBaseHelper(mContext);\r\n    }\r\n\r\n    public DataAdapter createDatabase() throws SQLException\r\n    {\r\n        try\r\n        {\r\n            mDbHelper.createDataBase();\r\n        }\r\n        catch (IOException mIOException)\r\n        {\r\n            Log.e(TAG, mIOException.toString() + \"  UnableToCreateDatabase\");\r\n            throw new Error(\"UnableToCreateDatabase\");\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public DataAdapter open() throws SQLException\r\n    {\r\n        try\r\n        {\r\n            mDbHelper.openDataBase();\r\n            mDbHelper.close();\r\n            mDb = mDbHelper.getReadableDatabase();\r\n        }\r\n        catch (SQLException mSQLException)\r\n        {\r\n            Log.e(TAG, \"open >>\"+ mSQLException.toString());\r\n            throw mSQLException;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public void close()\r\n    {\r\n        mDbHelper.close();\r\n    }\r\n\r\n    public List getTableData()\r\n    {\r\n        try\r\n        {\r\n            // Table 이름 -> antpool_bitcoin 불러오기\r\n            String sql =\"SELECT * FROM \" + TABLE_NAME;\r\n\r\n            // 모델 넣을 리스트 생성\r\n            List gasList = new ArrayList();\r\n\r\n            // TODO : 모델 선언\r\n            GAS gas = null;\r\n\r\n            Cursor mCur = mDb.rawQuery(sql, null);\r\n            if (mCur!=null)\r\n            {\r\n                // 칼럼의 마지막까지\r\n                while( mCur.moveToNext() ) {\r\n\r\n                    // TODO : 커스텀 모델 생성\r\n                    gas = new GAS();\r\n\r\n                    // TODO : Record 기술\r\n                    // id, name, account, privateKey, secretKey, Comment\r\n                    gas.setGas_pk(mCur.getInt(0));\r\n                    gas.setNatural(mCur.getDouble(1));\r\n                    gas.setCO(mCur.getDouble(2));\r\n                    gas.setLPGLNG(mCur.getDouble(3));\r\n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n                        gas.setTIMESTAMP(LocalDateTime.parse(mCur.getString(4)));\r\n                    }\r\n\r\n                    // 리스트에 넣기\r\n                    gasList.add(gas);\r\n                }\r\n\r\n            }\r\n            return gasList;\r\n        }\r\n        catch (SQLException mSQLException)\r\n        {\r\n            Log.e(TAG, \"getTestData >>\"+ mSQLException.toString());\r\n            throw mSQLException;\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/DataAdapter.java b/app/src/main/java/com/example/myapplication/DataAdapter.java
--- a/app/src/main/java/com/example/myapplication/DataAdapter.java	(revision a1d87cf1e0cce6b7d58f09402b115110cab40ebc)
+++ b/app/src/main/java/com/example/myapplication/DataAdapter.java	(date 1685185599104)
@@ -90,7 +90,7 @@
                     // TODO : Record 기술
                     // id, name, account, privateKey, secretKey, Comment
                     gas.setGas_pk(mCur.getInt(0));
-                    gas.setNatural(mCur.getDouble(1));
+                    gas.setLPGLNG(mCur.getDouble(1));
                     gas.setCO(mCur.getDouble(2));
                     gas.setLPGLNG(mCur.getDouble(3));
                     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
Index: app/src/main/java/com/example/myapplication/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.content.Context;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.Network;\r\nimport android.net.NetworkCapabilities;\r\nimport android.net.NetworkInfo;\r\nimport android.net.wifi.WifiInfo;\r\nimport android.net.wifi.WifiManager;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.widget.TextView;\r\nimport java.net.ConnectException;\r\n\r\nimport org.eclipse.paho.android.service.MqttAndroidClient;\r\nimport org.eclipse.paho.client.mqttv3.IMqttActionListener;\r\nimport org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;\r\nimport org.eclipse.paho.client.mqttv3.IMqttMessageListener;\r\nimport org.eclipse.paho.client.mqttv3.IMqttToken;\r\nimport org.eclipse.paho.client.mqttv3.MqttCallbackExtended;\r\nimport org.eclipse.paho.client.mqttv3.MqttConnectOptions;\r\nimport org.eclipse.paho.client.mqttv3.MqttMessage;\r\nimport org.eclipse.paho.client.mqttv3.MqttTopic;\r\nimport org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private MqttAndroidClient mqttAndroidClient;\r\n\r\n    private static final String MQTT_BROKER = \"tcp://broker.mqtt-dashboard.com:1883\";\r\n    private static final String MQTT_CLIENT_ID = \"android-client\";\r\n    private static final String MQTT_TOPIC = \"myeongseung\";\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        TextView wifiNameTextView = findViewById(R.id.wifiNameTextView);\r\n\r\n        String wifiName = getWifiName();\r\n        wifiNameTextView.setText(wifiName);\r\n\r\n        String clientId = MQTT_CLIENT_ID + System.currentTimeMillis();\r\n        mqttAndroidClient = new MqttAndroidClient(this, MQTT_BROKER, clientId, new MemoryPersistence());\r\n\r\n        mqttAndroidClient.setCallback(new MqttCallbackExtended() {\r\n            @Override\r\n            public void connectComplete(boolean reconnect, String serverURI) {\r\n                // Called when the MQTT connection is established\r\n                // Subscribe to the topic\r\n                subscribeToTopic();\r\n            }\r\n\r\n            @Override\r\n            public void connectionLost(Throwable cause) {\r\n                // Called when the MQTT connection is lost\r\n            }\r\n\r\n            @Override\r\n            public void messageArrived(String topic, MqttMessage message) throws Exception {\r\n                // Called when a new MQTT message is received\r\n                String payload = new String(message.getPayload());\r\n                // Process the received message\r\n                // TODO: Handle the received value\r\n                parseJson(payload);\r\n            }\r\n\r\n            @Override\r\n            public void deliveryComplete(IMqttDeliveryToken token) {\r\n                // Called when a message has been successfully delivered\r\n            }\r\n        });\r\n\r\n        MqttConnectOptions mqttConnectOptions = new MqttConnectOptions();\r\n        // Set the username and password if required\r\n        // mqttConnectOptions.setUserName(\"your-username\");\r\n        // mqttConnectOptions.setPassword(\"your-password\".toCharArray());\r\n        try {\r\n            mqttAndroidClient.connect(mqttConnectOptions, null, new IMqttActionListener() {\r\n                @Override\r\n                public void onSuccess(IMqttToken asyncActionToken) {\r\n                    // Called when the MQTT connection is successfully established\r\n                }\r\n\r\n                @Override\r\n                public void onFailure(IMqttToken asyncActionToken, Throwable exception) {\r\n                    // Called when the MQTT connection fails\r\n                }\r\n            });\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    private void subscribeToTopic() {\r\n        try {\r\n            mqttAndroidClient.subscribe(MQTT_TOPIC, 0, new IMqttMessageListener() {\r\n                @Override\r\n                public void messageArrived(String topic, MqttMessage message) throws Exception {\r\n                    // Called when a new MQTT message is received\r\n                    String payload = new String(message.getPayload());\r\n                    // Process the received JSON message\r\n                    parseJson(payload);\r\n                }\r\n            });\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    private void parseJson(String json) {\r\n        // Parse the JSON string and process the received values\r\n        // TODO: Implement JSON parsing and value handling logic\r\n        try{\r\n            JSONObject jsonObject = new JSONObject(json);\r\n\r\n            String gasSensor = jsonObject.getString(\"Gas_sensor\");\r\n            int value = jsonObject.getInt(\"value\");\r\n\r\n            if (gasSensor.equals(\"LPG\")){\r\n\r\n            }\r\n\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private String getWifiName() {\r\n        String wifiName = \"\";\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (connectivityManager != null) {\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                Network network = null;\r\n                if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {\r\n                    network = connectivityManager.getActiveNetwork();\r\n                }\r\n                if (network != null) {\r\n                    NetworkCapabilities networkCapabilities = connectivityManager.getNetworkCapabilities(network);\r\n                    if (networkCapabilities != null && networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_WIFI)) {\r\n                        wifiName = getWifiNameFromWifiManager();\r\n                    }\r\n                }\r\n            } else {\r\n                NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\r\n                if (networkInfo != null && networkInfo.isConnected() && networkInfo.getType() == ConnectivityManager.TYPE_WIFI) {\r\n                    wifiName = getWifiNameFromWifiManager();\r\n                }\r\n            }\r\n        }\r\n        return wifiName;\r\n    }\r\n\r\n    private String getWifiNameFromWifiManager() {\r\n        String wifiName = \"\";\r\n        WifiManager wifiManager = (WifiManager) getApplicationContext().getSystemService(Context.WIFI_SERVICE);\r\n        if (wifiManager != null) {\r\n            WifiInfo wifiInfo = wifiManager.getConnectionInfo();\r\n            wifiName = wifiInfo.getSSID();\r\n            // Remove double quotes from the SSID\r\n            wifiName = wifiName.replace(\"\\\"\", \"\");\r\n        }\r\n        return wifiName;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/MainActivity.java b/app/src/main/java/com/example/myapplication/MainActivity.java
--- a/app/src/main/java/com/example/myapplication/MainActivity.java	(revision a1d87cf1e0cce6b7d58f09402b115110cab40ebc)
+++ b/app/src/main/java/com/example/myapplication/MainActivity.java	(date 1685445283239)
@@ -129,7 +129,7 @@
         }
     }
 
-    private String getWifiName() {
+    private String getWifiName() { // 와이파이 이름 받아와서 textField를 바꾸는 코드
         String wifiName = "";
         ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
         if (connectivityManager != null) {
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision a1d87cf1e0cce6b7d58f09402b115110cab40ebc)
+++ b/.idea/misc.xml	(date 1685442559334)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="jbr-17" project-jdk-type="JavaSDK" />
